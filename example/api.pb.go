// Code generated by protoc-gen-go.
// source: api.proto
// DO NOT EDIT!

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	api.proto

It has these top-level messages:
	Empty
	UserCreateType
	UserGetType
	User
	UserListType
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type Empty struct {
}

func (m *Empty) Reset()                    { *m = Empty{} }
func (m *Empty) String() string            { return proto1.CompactTextString(m) }
func (*Empty) ProtoMessage()               {}
func (*Empty) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type UserCreateType struct {
	Type_ string `protobuf:"bytes,1,opt,name=type_,json=type" json:"type_,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Age   uint32 `protobuf:"varint,3,opt,name=age" json:"age,omitempty"`
	Email string `protobuf:"bytes,4,opt,name=email" json:"email,omitempty"`
	Sex   string `protobuf:"bytes,5,opt,name=sex" json:"sex,omitempty"`
}

func (m *UserCreateType) Reset()                    { *m = UserCreateType{} }
func (m *UserCreateType) String() string            { return proto1.CompactTextString(m) }
func (*UserCreateType) ProtoMessage()               {}
func (*UserCreateType) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type UserGetType struct {
	UserID int32 `protobuf:"varint,1,opt,name=userID" json:"userID,omitempty"`
}

func (m *UserGetType) Reset()                    { *m = UserGetType{} }
func (m *UserGetType) String() string            { return proto1.CompactTextString(m) }
func (*UserGetType) ProtoMessage()               {}
func (*UserGetType) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type User struct {
	Name  string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Email string `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
	Age   uint32 `protobuf:"varint,3,opt,name=age" json:"age,omitempty"`
	Sex   string `protobuf:"bytes,4,opt,name=sex" json:"sex,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto1.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type UserListType struct {
	Limit int32 `protobuf:"varint,1,opt,name=limit" json:"limit,omitempty"`
}

func (m *UserListType) Reset()                    { *m = UserListType{} }
func (m *UserListType) String() string            { return proto1.CompactTextString(m) }
func (*UserListType) ProtoMessage()               {}
func (*UserListType) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func init() {
	proto1.RegisterType((*Empty)(nil), "proto.Empty")
	proto1.RegisterType((*UserCreateType)(nil), "proto.UserCreateType")
	proto1.RegisterType((*UserGetType)(nil), "proto.UserGetType")
	proto1.RegisterType((*User)(nil), "proto.User")
	proto1.RegisterType((*UserListType)(nil), "proto.UserListType")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for FilesService service

type FilesServiceClient interface {
}

type filesServiceClient struct {
	cc *grpc.ClientConn
}

func NewFilesServiceClient(cc *grpc.ClientConn) FilesServiceClient {
	return &filesServiceClient{cc}
}

// Server API for FilesService service

type FilesServiceServer interface {
}

func RegisterFilesServiceServer(s *grpc.Server, srv FilesServiceServer) {
	s.RegisterService(&_FilesService_serviceDesc, srv)
}

var _FilesService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.FilesService",
	HandlerType: (*FilesServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    fileDescriptor0,
}

// Client API for UserService service

type UserServiceClient interface {
	Create(ctx context.Context, in *UserCreateType, opts ...grpc.CallOption) (*Empty, error)
	Get(ctx context.Context, in *UserGetType, opts ...grpc.CallOption) (*User, error)
	List(ctx context.Context, in *UserListType, opts ...grpc.CallOption) (UserService_ListClient, error)
}

type userServiceClient struct {
	cc *grpc.ClientConn
}

func NewUserServiceClient(cc *grpc.ClientConn) UserServiceClient {
	return &userServiceClient{cc}
}

func (c *userServiceClient) Create(ctx context.Context, in *UserCreateType, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := grpc.Invoke(ctx, "/proto.UserService/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) Get(ctx context.Context, in *UserGetType, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := grpc.Invoke(ctx, "/proto.UserService/Get", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) List(ctx context.Context, in *UserListType, opts ...grpc.CallOption) (UserService_ListClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_UserService_serviceDesc.Streams[0], c.cc, "/proto.UserService/List", opts...)
	if err != nil {
		return nil, err
	}
	x := &userServiceListClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type UserService_ListClient interface {
	Recv() (*User, error)
	grpc.ClientStream
}

type userServiceListClient struct {
	grpc.ClientStream
}

func (x *userServiceListClient) Recv() (*User, error) {
	m := new(User)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for UserService service

type UserServiceServer interface {
	Create(context.Context, *UserCreateType) (*Empty, error)
	Get(context.Context, *UserGetType) (*User, error)
	List(*UserListType, UserService_ListServer) error
}

func RegisterUserServiceServer(s *grpc.Server, srv UserServiceServer) {
	s.RegisterService(&_UserService_serviceDesc, srv)
}

func _UserService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserCreateType)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.UserService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).Create(ctx, req.(*UserCreateType))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserGetType)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.UserService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).Get(ctx, req.(*UserGetType))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_List_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(UserListType)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(UserServiceServer).List(m, &userServiceListServer{stream})
}

type UserService_ListServer interface {
	Send(*User) error
	grpc.ServerStream
}

type userServiceListServer struct {
	grpc.ServerStream
}

func (x *userServiceListServer) Send(m *User) error {
	return x.ServerStream.SendMsg(m)
}

var _UserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.UserService",
	HandlerType: (*UserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _UserService_Create_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _UserService_Get_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "List",
			Handler:       _UserService_List_Handler,
			ServerStreams: true,
		},
	},
	Metadata: fileDescriptor0,
}

func init() { proto1.RegisterFile("api.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 278 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x5c, 0x90, 0x5f, 0x4b, 0xc3, 0x30,
	0x14, 0xc5, 0xc9, 0x96, 0x54, 0x76, 0x57, 0x87, 0xdc, 0x4d, 0x29, 0x7b, 0x1a, 0x45, 0x65, 0x08,
	0x0e, 0x99, 0x1f, 0xc1, 0x3f, 0x43, 0xf0, 0xa9, 0xce, 0x67, 0x89, 0x72, 0x91, 0x40, 0xeb, 0x42,
	0x12, 0xc5, 0x7e, 0x0b, 0x3f, 0xb2, 0xe4, 0x8f, 0xb3, 0xdb, 0x53, 0xef, 0x39, 0x1c, 0xfa, 0x3b,
	0x39, 0x30, 0x90, 0x5a, 0x2d, 0xb4, 0xd9, 0xb8, 0x0d, 0x8a, 0xf0, 0x29, 0x0f, 0x40, 0xdc, 0x35,
	0xda, 0xb5, 0xa5, 0x85, 0xd1, 0xb3, 0x25, 0x73, 0x63, 0x48, 0x3a, 0x5a, 0xb7, 0x9a, 0x70, 0x0c,
	0xc2, 0xb5, 0x9a, 0x5e, 0x0a, 0x36, 0x63, 0xf3, 0x41, 0xc5, 0xbd, 0x40, 0x04, 0xfe, 0x21, 0x1b,
	0x2a, 0x7a, 0xd1, 0xf3, 0x37, 0x1e, 0x41, 0x5f, 0xbe, 0x53, 0xd1, 0x9f, 0xb1, 0xf9, 0x61, 0xe5,
	0x4f, 0x9c, 0x80, 0xa0, 0x46, 0xaa, 0xba, 0xe0, 0x21, 0x16, 0x85, 0xcf, 0x59, 0xfa, 0x2e, 0x44,
	0xf0, 0xfc, 0x59, 0x9e, 0xc1, 0xd0, 0x43, 0x57, 0xe4, 0x02, 0xf1, 0x04, 0xb2, 0x4f, 0x4b, 0xe6,
	0xe1, 0x36, 0x20, 0x45, 0x95, 0x54, 0xb9, 0x06, 0xee, 0x63, 0x5b, 0x38, 0xeb, 0xc0, 0xb7, 0xa8,
	0xde, 0x1e, 0x6a, 0xaf, 0x52, 0x82, 0xf3, 0x7f, 0xf8, 0x29, 0xe4, 0xfe, 0xaf, 0x8f, 0xca, 0x46,
	0xfa, 0x04, 0x44, 0xad, 0x1a, 0xe5, 0x12, 0x3c, 0x8a, 0xe5, 0x08, 0xf2, 0x7b, 0x55, 0x93, 0x7d,
	0x22, 0xf3, 0xa5, 0xde, 0x68, 0xf9, 0xc3, 0x62, 0xe7, 0xa4, 0xf1, 0x12, 0xb2, 0xb8, 0x19, 0x1e,
	0xc7, 0x65, 0x17, 0xbb, 0x33, 0x4e, 0xf3, 0x64, 0x87, 0x99, 0xf1, 0x1c, 0xfa, 0x2b, 0x72, 0x88,
	0x9d, 0x6c, 0x7a, 0xfd, 0x74, 0xd8, 0xf1, 0xf0, 0x02, 0xb8, 0x2f, 0x86, 0xe3, 0x8e, 0xf9, 0xd7,
	0x74, 0x27, 0x79, 0xc5, 0x5e, 0xb3, 0xa0, 0xae, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0xbe, 0xe6,
	0x7c, 0xae, 0xde, 0x01, 0x00, 0x00,
}
